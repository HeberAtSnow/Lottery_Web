@page
@model FrontEnd.Pages.StoreModel
@addTagHelper *, Microsoft.AspNetCore.Mvc.TagHelpers
@using ClassLib
@{
Layout = "_Layout";
}

<h1>
    Welcome to the ticket store!
</h1>
<form method="post">
    <label for="name">Lucky Participant Name:</label><br />
    <input name="name" type="text" value="@Model.PlayerNombre" />

    <h2>
        How do you want to acquire your winner tickets?
    </h2>
    <button type="submit" asp-page-handler="NumberPick">Pick By Number</button>
    <button type="submit" asp-page-handler="QuickPick">Quick Pick</button>
</form>

@if (Model.Selection == "NumberPick")
{
    <h2>
        Number Pick
    </h2>
    <p>
        I don't trust computers! If you want something done right, do it yourself.
    </p>

    <form method="post" asp-page-handler="NumberPickPurchase">
        @for (int i = 0; i < 5; i++)
        {
            <label for="ticket">Number @(i + 1) :</label>
            <input type="number" name="ticket" min="0" max="69" />
        }
        <label for="ticket">Powerball:</label>
        <input id="powerball" type="number" name="ticket" min="0" max="26" />
        <br />
        <button type="submit">Let's win that price!</button>
    </form>

    @if (Model.RecentPurchase == true)
    {
        <h2>Last Ticket bought</h2>
        <table>
            <tr>
                @for (int i = 0; i < 5; i++)
                {
                    <td>@Model.LastTicket[i]</td>
                }
                <td id="powerball">@Model.LastTicket[5]</td>
            </tr>
        </table>
    }
}

@if (Model.Selection == "QuickPick")
{
    <h2>
        Quick Pick
    </h2>
    <p>
        Let the computer do it for me!
    </p>

    <form method="post" asp-page-handler="QuickPickPurchase">
        <label for="numTickets">Purchase 1-1000 random tickets</label>
        <input name="numTickets" type="number" min="0" max="1000" value="@Model.NumQuickPicks" />
        <input type="hidden" value="@Model.PlayerNombre" name="name" />
        <br />
        <button type="submit">Give me them Tickets!</button>
    </form>
}
@if (Model.PurchasedTickets?.Any() ?? false)
{
    <table>
        <thead>
            <tr>
                <td>B1</td>
                <td>B2</td>
                <td>B3</td>
                <td>B4</td>
                <td>B5</td>
                <td>PB</td>
                <td>WinLevel</td>
                <td>WinAmt$</td>
            </tr>
        </thead>
        <tbody>
            @foreach (var x in Model.PurchasedTickets)
            {
                <tr>
                    <td>@x.balls[0]</td>
                    <td>@x.balls[1]</td>
                    <td>@x.balls[2]</td>
                    <td>@x.balls[3]</td>
                    <td>@x.balls[4]</td>
                    <td id="powerball">@x.powerBall</td>
                    @if (x.isGraded)
                    {
                        <td>@x.winLevel</td>
                        <td>@x.winAmtDollars.ToString("c")</td>
                    }
                    else
                    {
                        <td />
                        <td />
                    }
                </tr>
            }
        </tbody>
    </table>
    <p>Number of purchased tickets: @Model.PurchasedTickets.Count()</p>
}
