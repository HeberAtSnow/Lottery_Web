{
  "AllowedHosts": "*",

  "Serilog": {
    "Using": [],
    "MinimumLevel": {
      "Default": "Information",
      "Override": {
        "Microsoft": "Warning",
        "System": "Warning"
      }
    },

    "WriteTo": [
      {
        "Name": "Logger",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "(@Level = 'Error' or @Level = 'Fatal' or @Level = 'Warning')"
                }
              }
            ],
            "WriteTo": [
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/access.txt",
                  "outputTemplate": "{Timestamp:o} [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7
                }
              },
              {
                "Name": "File",
                "Args": {
                  "path": "Logs/access.json",
                  "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
                }
              },
              {
                "Name": "Seq",
                "Args": {
                  "serverUrl": "http://localhost:8081",
                  "formatter": "Serilog.Formatting.Json.JsonFormatter, Serilog"
                }

              }

            ]
          }
        }
      },
      {
        "Name": "Logger2",
        "Args": {
          "configureLogger": {
            "Filter": [
              {
                "Name": "ByIncludingOnly",
                "Args": {
                  "expression": "(@Level = 'Information' or @Level = 'Debug')"
                }
              }
            ],
            "WriteTo": [

              {

                "Name": "File",
                "Args": {
                  "path": "Logs/performance.txt",
                  "outputTemplate": "{Timestamp:o} [{Level:u3}] ({SourceContext}) {Message}{NewLine}{Exception}",
                  "rollingInterval": "Day",
                  "retainedFileCountLimit": 7
                }
              }
            ]
          }
        }
      }
    ],

    "Enrich": [
      "FromLogContext",
      "WithMachineName",
      "WithProcessId",
      "WithThreadId"
    ],



    "Properties": {
      "Application": "Lottery_Web"
    }
  }
}


//docker run -d --restart unless-stopped --name seq -e ACCEPT_EULA=Y -v C:\\users\\maksa\\source\\repos\\lottery_web:/data -p 8081:80 datalust/seq:latest